<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="2" passed="1" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-06-03T09:36:07Z" name="Suite" finished-at="2022-06-03T09:36:25Z" duration-ms="17897">
    <groups>
    </groups>
    <test started-at="2022-06-03T09:36:07Z" name="Test" finished-at="2022-06-03T09:36:25Z" duration-ms="17897">
      <class name="com.testng.TestNgTestOne">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.testng.TestNgTestOne@3bd323e9]" started-at="2022-06-03T09:36:07Z" name="setup" finished-at="2022-06-03T09:36:15Z" duration-ms="7764" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="f()[pri:0, instance:com.testng.TestNgTestOne@3bd323e9]" started-at="2022-06-03T09:36:15Z" name="f" finished-at="2022-06-03T09:36:17Z" duration-ms="2756" status="FAIL">
          <exception class="java.lang.ArithmeticException">
            <message>
              <![CDATA[/ by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ArithmeticException: / by zero
at com.testng.TestNgTestOne.f(TestNgTestOne.java:17)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ArithmeticException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.testng.TestNgTestOne@3bd323e9]" started-at="2022-06-03T09:36:19Z" name="tearDown" finished-at="2022-06-03T09:36:19Z" duration-ms="292" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.testng.TestNgTestOne -->
      <class name="com.testng.TestNgTestTwo">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.testng.TestNgTestTwo@39ac0c0a]" started-at="2022-06-03T09:36:07Z" name="setup" finished-at="2022-06-03T09:36:15Z" duration-ms="8187" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="f()[pri:0, instance:com.testng.TestNgTestTwo@39ac0c0a]" started-at="2022-06-03T09:36:15Z" name="f" finished-at="2022-06-03T09:36:22Z" duration-ms="6896" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.testng.TestNgTestTwo@39ac0c0a]" started-at="2022-06-03T09:36:23Z" name="tearDown" finished-at="2022-06-03T09:36:25Z" duration-ms="1312" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.testng.TestNgTestTwo -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
